stages: 
  - test
  - deploy_group_a
  - deploy_group_b
  - peckham_deploy

compose-lint:
  image: docker:latest
  stage: test
  script:
    - docker compose -f compose.yml config --quiet --no-interpolate
  tags:
    - dev
  

rpi-deploy:
  image: alpine:3.21
  stage: deploy_group_b
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
      - compose.yml

  before_script:
    - apk add --no-cache openssh-client
    - apk add --no-cache bash sudo
    - apk add --no-cache curl
    - curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.alpine.sh' | bash
    - apk update && sudo apk add infisical
    - infisical login --domain=$INFISICAL_URL --method=universal-auth --client-id=$INFISICAL_MACHINE_CLIENT_ID --client-secret=$INFISICAL_MACHINE_CLIENT_SECRET 
  variables:
    SSH_HOST: ""
    SSH_USER: ""
    SSH_PRIVATE_KEY: ""
    WORK_DIR: ""
  script:
    - SSH_HOST=$(infisical secrets get SSH_HOST --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=rpi)
    - SSH_USER=$(infisical secrets get SSH_USER --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=rpi)
    - SSH_PRIVATE_KEY=$(infisical secrets get SSH_PRIVATE_KEY --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=rpi)
    - WORK_DIR=$(infisical secrets get WORK_DIR --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=rpi)
    - echo "$SSH_PRIVATE_KEY" | base64 -d > id_rsa && chmod 600 id_rsa
    - eval $(ssh-agent -s)
    - ssh-add id_rsa
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "mkdir -p $WORK_DIR"
    - scp -o StrictHostKeyChecking=no compose.yml $SSH_USER@$SSH_HOST:$WORK_DIR
    - infisical export --domain=$INFISICAL_URL --projectId=$projectId --env=rpi --path="/docker" > .env
    - sed -i "s/[']//g" .env
    - scp -o StrictHostKeyChecking=no .env $SSH_USER@$SSH_HOST:$WORK_DIR
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml pull"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml down --remove-orphans"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml up -d"
  tags:
    - dev

winterfell-deploy:
  image: alpine:3.21
  stage: deploy_group_b
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
      - compose.yml
  before_script:
    - apk add --no-cache openssh-client
    - apk add --no-cache bash sudo
    - apk add --no-cache curl
    - curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.alpine.sh' | bash
    - apk update && sudo apk add infisical
    - infisical login --domain=$INFISICAL_URL --method=universal-auth --client-id=$INFISICAL_MACHINE_CLIENT_ID --client-secret=$INFISICAL_MACHINE_CLIENT_SECRET 
  variables:
    SSH_HOST: ""
    SSH_USER: ""
    SSH_PRIVATE_KEY: ""
    WORK_DIR: ""
  script:
    - SSH_HOST=$(infisical secrets get SSH_HOST --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=prod)
    - SSH_USER=$(infisical secrets get SSH_USER --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=prod)
    - SSH_PRIVATE_KEY=$(infisical secrets get SSH_PRIVATE_KEY --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=prod)
    - WORK_DIR=$(infisical secrets get WORK_DIR --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=prod)
    - echo "$SSH_PRIVATE_KEY" | base64 -d > id_rsa && chmod 600 id_rsa
    - eval $(ssh-agent -s)
    - ssh-add id_rsa
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "mkdir -p $WORK_DIR"
    - scp -o StrictHostKeyChecking=no compose.yml $SSH_USER@$SSH_HOST:$WORK_DIR
    - infisical export --domain=$INFISICAL_URL --projectId=$projectId --env=prod --path="/docker" > .env
    - sed -i "s/[']//g" .env
    - scp -o StrictHostKeyChecking=no .env $SSH_USER@$SSH_HOST:$WORK_DIR
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml pull"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml down --remove-orphans"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml up -d"
  tags:
    - dev

skylab-deploy:
  image: alpine:3.21
  stage: deploy_group_a
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
      - compose.yml
  before_script:
    - apk add --no-cache openssh-client
    - apk add --no-cache bash sudo
    - apk add --no-cache curl
    - curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.alpine.sh' | bash
    - apk update && sudo apk add infisical
    - infisical login --domain=$INFISICAL_URL --method=universal-auth --client-id=$INFISICAL_MACHINE_CLIENT_ID --client-secret=$INFISICAL_MACHINE_CLIENT_SECRET 
  variables:
    SSH_HOST: ""
    SSH_USER: ""
    SSH_PRIVATE_KEY: ""
    WORK_DIR: ""
  script:
    - SSH_HOST=$(infisical secrets get SSH_HOST --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=dev)
    - SSH_USER=$(infisical secrets get SSH_USER --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=dev)
    - SSH_PRIVATE_KEY=$(infisical secrets get SSH_PRIVATE_KEY --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=dev)
    - WORK_DIR=$(infisical secrets get WORK_DIR --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=dev)
    - echo "$SSH_PRIVATE_KEY" | base64 -d > id_rsa && chmod 600 id_rsa
    - eval $(ssh-agent -s)
    - ssh-add id_rsa
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "mkdir -p $WORK_DIR"
    - scp -o StrictHostKeyChecking=no compose.yml $SSH_USER@$SSH_HOST:$WORK_DIR
    - infisical export --domain=$INFISICAL_URL --projectId=$projectId --env=dev --path="/docker" > .env
    - sed -i "s/[']//g" .env
    - scp -o StrictHostKeyChecking=no .env $SSH_USER@$SSH_HOST:$WORK_DIR
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml pull"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml down --remove-orphans"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml up -d"
  tags:
    - prod

stag-deploy:
  image: alpine:3.21
  stage: deploy_group_a
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
      - compose.yml
  before_script:
    - apk add --no-cache openssh-client
    - apk add --no-cache bash sudo
    - apk add --no-cache curl
    - curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.alpine.sh' | bash
    - apk update && sudo apk add infisical
    - infisical login --domain=$INFISICAL_URL --method=universal-auth --client-id=$INFISICAL_MACHINE_CLIENT_ID --client-secret=$INFISICAL_MACHINE_CLIENT_SECRET 
  variables:
    SSH_HOST: ""
    SSH_USER: ""
    SSH_PRIVATE_KEY: ""
    WORK_DIR: ""
  script:
    - SSH_HOST=$(infisical secrets get SSH_HOST --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=stag)
    - SSH_USER=$(infisical secrets get SSH_USER --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=stag)
    - SSH_PRIVATE_KEY=$(infisical secrets get SSH_PRIVATE_KEY --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=stag)
    - WORK_DIR=$(infisical secrets get WORK_DIR --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=stag)
    - echo "$SSH_PRIVATE_KEY" | base64 -d > id_rsa && chmod 600 id_rsa
    - eval $(ssh-agent -s)
    - ssh-add id_rsa
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "mkdir -p $WORK_DIR"
    - scp -o StrictHostKeyChecking=no compose.yml $SSH_USER@$SSH_HOST:$WORK_DIR
    - infisical export --domain=$INFISICAL_URL --projectId=$projectId --env=stag --path="/docker" > .env
    - sed -i "s/[']//g" .env
    - scp -o StrictHostKeyChecking=no .env $SSH_USER@$SSH_HOST:$WORK_DIR
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml pull"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml down --remove-orphans"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml up -d"
  tags:
    - prod

mp-deploy:
  image: alpine:3.21
  stage: deploy_group_b
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
      - compose.yml
  before_script:
    - apk add --no-cache openssh-client
    - apk add --no-cache bash sudo
    - apk add --no-cache curl
    - curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.alpine.sh' | bash
    - apk update && sudo apk add infisical
    - infisical login --domain=$INFISICAL_URL --method=universal-auth --client-id=$INFISICAL_MACHINE_CLIENT_ID --client-secret=$INFISICAL_MACHINE_CLIENT_SECRET 
  variables:
    SSH_HOST: ""
    SSH_USER: ""
    SSH_PRIVATE_KEY: ""
    WORK_DIR: ""
  script:
    - SSH_HOST=$(infisical secrets get SSH_HOST --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=mp)
    - SSH_USER=$(infisical secrets get SSH_USER --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=mp)
    - SSH_PRIVATE_KEY=$(infisical secrets get SSH_PRIVATE_KEY --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=mp)
    - WORK_DIR=$(infisical secrets get WORK_DIR --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=mp)
    - echo "$SSH_PRIVATE_KEY" | base64 -d > id_rsa && chmod 600 id_rsa
    - eval $(ssh-agent -s)
    - ssh-add id_rsa
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "mkdir -p $WORK_DIR"
    - scp -o StrictHostKeyChecking=no compose.yml $SSH_USER@$SSH_HOST:$WORK_DIR
    - infisical export --domain=$INFISICAL_URL --projectId=$projectId --env=mp --path="/docker" > .env
    - sed -i "s/[']//g" .env
    - scp -o StrictHostKeyChecking=no .env $SSH_USER@$SSH_HOST:$WORK_DIR
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml pull"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml down --remove-orphans"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml up -d"
  tags:
    - mp-rpi

mp-rpi-deploy:
  image: alpine:3.21
  stage: deploy_group_a
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
      - compose.yml
  before_script:
    - apk add --no-cache openssh-client
    - apk add --no-cache bash sudo
    - apk add --no-cache curl
    - curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.alpine.sh' | bash
    - apk update && sudo apk add infisical
    - infisical login --domain=$INFISICAL_URL --method=universal-auth --client-id=$INFISICAL_MACHINE_CLIENT_ID --client-secret=$INFISICAL_MACHINE_CLIENT_SECRET 
  variables:
    SSH_HOST: ""
    SSH_USER: ""
    SSH_PRIVATE_KEY: ""
    WORK_DIR: ""
  script:
    - SSH_HOST=$(infisical secrets get SSH_HOST --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=mp-rpi)
    - SSH_USER=$(infisical secrets get SSH_USER --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=mp-rpi)
    - SSH_PRIVATE_KEY=$(infisical secrets get SSH_PRIVATE_KEY --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=mp-rpi)
    - WORK_DIR=$(infisical secrets get WORK_DIR --plain --silent --domain=$INFISICAL_URL --projectId=$projectId --env=mp-rpi)
    - echo "$SSH_PRIVATE_KEY" | base64 -d > id_rsa && chmod 600 id_rsa
    - eval $(ssh-agent -s)
    - ssh-add id_rsa
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "mkdir -p $WORK_DIR"
    - scp -o StrictHostKeyChecking=no compose.yml $SSH_USER@$SSH_HOST:$WORK_DIR
    - infisical export --domain=$INFISICAL_URL --projectId=$projectId --env=mp-rpi --path="/docker" > .env
    - sed -i "s/[']//g" .env
    - scp -o StrictHostKeyChecking=no .env $SSH_USER@$SSH_HOST:$WORK_DIR
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml pull"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml down --remove-orphans"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "docker compose -f $WORK_DIR/compose.yml up -d"
  tags:
    - mp

